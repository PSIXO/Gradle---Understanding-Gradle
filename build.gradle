apply plugin: 'org.kordamp.markdown.convert'

buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
    }
    dependencies {
        classpath 'org.kordamp:markdown-gradle-plugin:1.0.0'
    }
}

markdownToHtml{
	sourceDir  new File("presentation")
	outputDir  new File("${project.buildDir}/slides")
}

task build {
}

task clean {
	doFirst{
		 delete "${project.buildDir}"
	}
}

task addFooter{
	doFirst{
			String footerText = new File(project.property("footer")).getText('UTF-8')
			footerText = footerText.replace("*NUMBER*","${project.ext.slide_name}")
			new File("${project.buildDir}/slides/${project.ext.slide_name}").append(footerText)
			println "ADDING FOOTER TO : " + "${project.ext.slide_name}"
	}
}

// Define slides tasks
fileTree("presentation").visit {FileVisitDetails details ->
	String name = details.file.name.take(details.file.name.lastIndexOf('.'))
	if("${details.file.name}".endsWith(".md") || "${details.file.name}".endsWith(".svg")){
		task "${name}" {
			description "Opens ${name} in default browser"
			group "Slides"
			doFirst{
				if("${details.file.name}".endsWith(".md")){
					java.awt.Desktop.desktop.browse new File("${project.buildDir}/slides/${name}.html").toURI()
				}
				else if("${details.file.name}".endsWith(".svg")){
					java.awt.Desktop.desktop.browse new File("${project.buildDir}/slides/${details.file.name}").toURI()
				}
			}
			doLast{
				project.ext.slide_name = "${name}.html"
			}
			dependsOn markdownToHtml
			if(project.hasProperty("footer")){
				addFooter.mustRunAfter "${name}"
			}
		}
		build.dependsOn "${name}"
	}
}

task questions{
	doFirst{
		println "Any questions ?"
	}
}

build.finalizedBy questions